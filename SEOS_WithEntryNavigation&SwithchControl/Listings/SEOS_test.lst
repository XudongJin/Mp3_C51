C51 COMPILER V9.54   SEOS_TEST                                                             12/15/2015 17:47:26 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SEOS_TEST
OBJECT MODULE PLACED IN .\Objects\SEOS_test.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE SEOS_test.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\SEOS_test.lst) TABS(2) OBJECT(.\Objects\SEOS_test.obj)

line level    source

   1          #include "stdio.h"
   2          #include "main.h"
   3          #include "PORT.H"
   4          #include "UART.h"
   5          #include "print_bytes.h"
   6          #include "SPI.h"
   7          #include "SDcard.h"
   8          #include "Long_Serial_In.h"
   9          #include "Directory_Functions_struct.h"
  10          #include "File_System_v2.h"
  11          #include "STA013_Config.h"
  12          #include "SEOS.h"
  13          #include "LCD_Routines.h"
  14          #include "Switch.h"
  15          
  16          uint8_t xdata buf1[512];
  17          uint8_t xdata buf2[512];
  18          
  19          
  20          extern Sw_global_t  play_button,scrollup_button,scrolldown_button;
  21          main()
  22          {
  23   1         uint32_t  idata Current_directory, Entry_clus;
  24   1         uint16_t  idata  i, num_entries, entry_num;
  25   1         uint8_t   idata error_flag;
  26   1         uint8_t idata mp3_name[16];
  27   1         uint8_t idata file_attr[16];
  28   1         FS_values_t * Drive_p;
  29   1      
  30   1         AMBERLED=OFF;
  31   1         YELLOWLED=OFF;
  32   1         GREENLED=OFF;
  33   1         REDLED = ON;
  34   1         STA013_RESET=0;
  35   1         i=0;
  36   1         while(i<=60000) i++;
  37   1         REDLED = OFF;
  38   1         AUXR=0x0c;   // make all of XRAM available
  39   1         if(OSC_PER_INST==6)
  40   1         {
  41   2            CKCON0=0x01;  // set X2 clock mode
  42   2         }
  43   1         else
  44   1         {
  45   2            CKCON0=0x00;  // set standard clock mode
  46   2         } 
  47   1         uart_init();
  48   1         printf("I2C Test Program\n\r\n\n");
  49   1         error_flag=SPI_Master_Init(400000UL);
  50   1         if(error_flag!=no_errors)
  51   1         {
  52   2            REDLED=ON;
  53   2            while(1);
  54   2         }
C51 COMPILER V9.54   SEOS_TEST                                                             12/15/2015 17:47:26 PAGE 2   

  55   1         printf("SD Card Initialization ... \n\r");
  56   1         error_flag=SD_card_init();
  57   1         if(error_flag!=no_errors)
  58   1         {
  59   2            REDLED=ON;
  60   2            while(1);
  61   2         }                        
  62   1         error_flag=SPI_Master_Init(50000000UL);
  63   1         if(error_flag!=no_errors)
  64   1         {
  65   2            REDLED=ON;
  66   2            while(1);
  67   2         }
  68   1         for(i=0;i<512;i++)
  69   1         {
  70   2            buf1[i]=0xff;  // erase valout for debug
  71   2            buf2[i]=0xff;
  72   2         }
  73   1         for(i=0;i<12;i++)
  74   1         {
  75   2            mp3_name[i]=0x00;  // erase valout for debug
  76   2         }
  77   1         error_flag=Mount_Drive(buf1);
  78   1         if(error_flag!=no_errors)
  79   1         {
  80   2            REDLED=ON;
  81   2            while(1);
  82   2         }
  83   1         Drive_p=Export_Drive_values();
  84   1         Current_directory=Drive_p->FirstRootDirSec;
  85   1         
  86   1         
  87   1            LCD_Init();
  88   1         STA013_init(); 
  89   1         Switch_init();  
  90   1         num_entries=Print_Directory(Current_directory, buf1);
  91   1         entry_num=1;
  92   1         if(entry_num<=num_entries){
  93   2          Entry_clus=Read_Dir_Entry(Current_directory, entry_num, buf1,mp3_name,file_attr);
  94   2          Update_Line1(mp3_name,16);
  95   2          Update_Line2(file_attr,16);
  96   2         }
  97   1         while(1)
  98   1         {
  99   2           
 100   2          Switch_Get_Input(SCROLLUP_MASK ,&scrollup_button);
 101   2          if(scrollup_button.sw_state==SW_PRESSED) // scrollup_button
 102   2          {
 103   3            if((entry_num-1)>=1){
 104   4              entry_num=entry_num-1;
 105   4              Entry_clus=Read_Dir_Entry(Current_directory, entry_num, buf1,mp3_name,file_attr);
 106   4              Update_Line1(mp3_name,16);
 107   4              Update_Line2(file_attr,16);
 108   4      
 109   4            }
 110   3          }
 111   2          Switch_Get_Input(SCROLLDOWN_MASK ,&scrolldown_button);
 112   2          if(scrolldown_button.sw_state==SW_PRESSED) //scrolldown_button
 113   2          {
 114   3            if((entry_num+1)<=num_entries){
 115   4              entry_num=entry_num+1;
 116   4              Entry_clus=Read_Dir_Entry(Current_directory, entry_num, buf1,mp3_name,file_attr);
C51 COMPILER V9.54   SEOS_TEST                                                             12/15/2015 17:47:26 PAGE 3   

 117   4              Update_Line1(mp3_name,16);
 118   4              Update_Line2(file_attr,16);
 119   4            }
 120   3          }
 121   2          Switch_Get_Input(PLAY_MASK ,&play_button);
 122   2          if(play_button.sw_state==SW_PRESSED) // play_button
 123   2          {
 124   3             if(Entry_clus&directory_bit)  // if it is a drectory
 125   3            {
 126   4               Entry_clus&=0x0FFFFFFF;
 127   4               Current_directory=First_Sector(Entry_clus);
 128   4              
 129   4              num_entries=Print_Directory(Current_directory, buf1);
 130   4              entry_num=1;
 131   4              if(entry_num<=num_entries){
 132   5              Entry_clus=Read_Dir_Entry(Current_directory, entry_num, buf1,mp3_name,file_attr);
 133   5              Update_Line1(mp3_name,16);
 134   5              Update_Line2(file_attr,16);
 135   5              }
 136   4            }
 137   3             else
 138   3            {
 139   4      
 140   4              Play_Song_State_Machine(Entry_clus);// if it is a file
 141   4            }
 142   3            
 143   3          }
 144   2       
 145   2           
 146   2           
 147   2         }
 148   1      } 
 149          
 150          
 151          
 152          
*** WARNING C294 IN LINE 45 OF SEOS_test.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    709    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   1024    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----      47
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
